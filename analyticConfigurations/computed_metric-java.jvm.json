{
  "analyticConfiguration" : {
    "tenantId" : null,
    "type" : "COMPUTED_METRIC",
    "id" : null,
    "packageId" : null,
    "name" : "Java JVM",
    "scope" : {
      "elementName" : null,
      "elementType" : "JVM",
      "elementTags" : null,
      "metricMatches" : null
    },
    "metrics" : [ {
      "match" : "netuitive.jvm.heap.utilizationpercent",
      "properties" : {
        "expression" : "(data['heap.used'].actual / data['heap.committed'].actual) * 100",
        "fqn" : "netuitive.jvm.heap.utilizationpercent",
        "name" : "Heap Utilization Percent"
      }
    }, {
      "match" : "netuitive.jvm.non-heap.utilizationpercent",
      "properties" : {
        "expression" : "data['mempool.metaspace.used'] != null && data['mempool.metaspace.used'].actual ? (data['mempool.codecache.used'].actual + data['mempool.metaspace.used'].actual) / (data['mempool.codecache.committed'].actual + data['mempool.metaspace.committed'].actual) * 100 : (data['mempool.codecache.used'].actual + data['mempool.pspermgen.used'].actual) / (data['mempool.codecache.committed'].actual + data['mempool.pspermgen.committed'].actual) * 100",
        "fqn" : "netuitive.jvm.non-heap.utilizationpercent",
        "name" : "Non-Heap Utilization Percent"
      }
    }, {
      "match" : "netuitive.jvm.totalmemory.utilizationpercent",
      "properties" : {
        "expression" : "data['mempool.metaspace.used'] != null && data['mempool.metaspace.used'].actual ? (data['mempool.codecache.used'].actual + data['mempool.metaspace.used'].actual + data['heap.used'].actual) / (data['mempool.codecache.committed'].actual + data['mempool.metaspace.committed'].actual + data['heap.committed'].actual) * 100 : (data['mempool.codecache.used'].actual + data['mempool.pspermgen.used'].actual + data['heap.used'].actual) / (data['mempool.codecache.committed'].actual + data['mempool.pspermgen.committed'].actual + data['heap.committed'].actual) * 100",
        "fqn" : "netuitive.jvm.totalmemory.utilizationpercent",
        "name" : "Total Memory Utilization Percent"
      }
    }, {
      "match" : "netuitive.method.errorpercent",
      "properties" : {
        "expression" : "data['${1}.${2}.calls'].actual == 0 ? 0 : 100 * (data['${1}.${2}.errors'].actual / data['${1}.${2}.calls'].actual)",
        "for" : "(.*)\\.(.*)\\.errors",
        "fqn" : "netuitive.${1}.${2}.errorpercent"
      }
    } ]
  }
}
